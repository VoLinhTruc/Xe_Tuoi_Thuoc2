<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GoogleMobileAds_Init("ca-app-pub-7816715445131288/5790434534");

GoogleMobileAds_AddBannerAt("ca-app-pub-7816715445131288/5790434534", GoogleMobileAds_Banner,0,0);
GoogleMobileAds_LoadInterstitial();

//network_set_config(network_config_use_non_blocking_socket, 1);
//network_set_config(network_config_connect_timeout, 2000);

var type = network_socket_tcp;
var ip = get_string("IP: ", "192.168.");
var port = get_integer("IP: ", 80);

global.socket = network_create_socket(type);
connection = network_connect_raw(global.socket, ip, port);

global.buffer_size = 1024;
global.buffer_type  = buffer_fixed;
global.buffer_alignment = 1;

global.char_up = 85;
global.char_down = 68;
global.char_left = 76;
global.char_right = 82;
global.char_hold = 72;

global.send_data = global.char_up;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
var network_type = async_load[? "type"];
switch(network_type)
{
    case network_type_connect:
    {
        show_message("network_type_connect");
        break;
    }

    case network_type_disconnect:
    {
        show_message("network_type_disconnect");
        break;
    }
    
    case network_type_data:
    {
        show_message("network_type_data");
        break;
    }
    
    case network_type_non_blocking_connect:
    {
        show_message("network_type_non_blocking_connect");
        break;
    }
}
*/

/*
var network_id = async_load[? "id"];
show_message("network_id: " + string(network_id));

var network_ip = async_load[? "ip"];
show_message("network_ip: " + string(network_ip));

var network_port = async_load[? "port"];
show_message("network_port: " + string(network_port));

var network_socket = async_load[? "socket"];
show_message("network_socket: " + string(network_socket));

var network_succeeded = async_load[? "succeeded"];
show_message("network_succeeded: " + string(network_succeeded));

var network_size = async_load[? "size"];
show_message("network_size: " + string(network_size));

if(network_size &gt; 0)
{
    var network_buffer = async_load[? "buffer"];
    buffer_seek(network_buffer, buffer_seek_start, 0);
    var received_string = buffer_read(network_buffer, buffer_string);
    show_message("received_string: " + received_string);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy(global.socket);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
